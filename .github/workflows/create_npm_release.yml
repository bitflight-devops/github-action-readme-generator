name: Tag and Release Updated NPM Package

on:
  pull_request_target:
    branches:
      - main
      - next
      - beta
      - "*.x"
  push:
    branches:
      - main
      - next
      - beta
      - "*.x"
  repository_dispatch:
    types: [semantic-release]

concurrency:
  group: ci-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read # for checkout

jobs:
  run-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
      statuses: write
      checks: write
      actions: write
      contents: write
    env:
      SKIP_PREFLIGHT_CHECK: trues
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{github.head_ref || github.ref}}

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"
          always-auth: true
          cache: npm

      - name: Configure PATH
        run: |
          mkdir -p "$HOME/.local/bin"
          echo "$HOME/.local/bin" >> "${GITHUB_PATH}"
          echo "HOME=$HOME" >> "${GITHUB_ENV}"

      - name: Configure Git
        run: |
          git config --global user.email "${{github.event.pusher.email || 'stack@bitflight.io'}}"
          git config --global user.name "${{github.event.pusher.name || 'GitHub[bot]'}}"
          git fetch --tags
          git status --porcelain -u

      - run: npm install
      - run: npm run test
      - run: npm run build
      - run: npm run generate-docs

  npm-release:
    needs: ["run-tests"]
    if: (github.actor != 'dependabot[bot]' && !contains(github.event.head_commit.message, 'build(release)') && !contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci'))
    name: Release NPM build
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      SKIP_PREFLIGHT_CHECK: true
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{github.head_ref || github.ref}}
          token: ${{ secrets.RELEASE_TOKEN }}

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"
          always-auth: true
          cache: npm

      - name: Configure PATH
        run: |
          mkdir -p "$HOME/.local/bin"
          echo "$HOME/.local/bin" >> "${GITHUB_PATH}"
          echo "HOME=$HOME" >> "${GITHUB_ENV}"

      - name: Configure Git
        run: |
          git config --global user.email "${{github.event.pusher.email || 'stack@bitflight.io'}}"
          git config --global user.name "${{github.event.pusher.name || 'GitHub[bot]'}}"
          git fetch --tags
          git status --porcelain -u

      - name: Install Deps
        id: deps
        run: |
          npm ci

      - name: Ensure dependencies are compatible with the version of node
        run: npx --yes ls-engines

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures

      - run: npm run build --if-present

      - run: npx --yes semantic-release@latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
