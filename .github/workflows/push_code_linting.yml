name: Code Linting and PR Checks
on: [pull_request]
jobs:
  pr_label:
    name: PR Semantic Label
    runs-on: ubuntu-latest
    if: (!contains(github.event.head_commit.message, 'build(release)'))
    env:
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
    permissions:
      issues: write
      pull-requests: write
      actions: write
      statuses: write
      checks: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Auto Pull Release Check
        run: |
          yarn install
          yarn auto pr-check --url ${{ github.event.pull_request.url }}
  eslint:
    name: runner / eslint
    if: (!contains(github.event.head_commit.message, 'build(release)'))
    runs-on: ubuntu-latest
    env:
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Build
        run: |
          yarn install
      - name: eslint
        uses: reviewdog/action-eslint@v1.17.0
        with:
          reporter: github-pr-review # Change reporter.
          eslint_flags: src --ext .ts
