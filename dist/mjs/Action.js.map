{"version":3,"file":"Action.js","sourceRoot":"","sources":["../../src/Action.ts"],"names":[],"mappings":"AAAA,sDAAsD;AACtD,qEAAqE;AACrE,OAAO,KAAK,EAAE,MAAM,SAAS,CAAC;AAE9B,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB,OAAO,OAAO,MAAM,oBAAoB,CAAC;AAqBzC,MAAM,CAAC,OAAO,OAAO,MAAM;IACzB,sBAAsB;IAEf,IAAI,CAAS;IAEb,WAAW,CAAS;IAEpB,QAAQ,CAAW;IAEnB,MAAM,CAAa;IAEnB,OAAO,CAAc;IAErB,IAAI,CAAO;IAEX,IAAI,CAAS;IAEpB,YAAY,UAAkB;QAC5B,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;QACvB,IAAI,aAAa,GAAG,IAAI,CAAC;QACzB,IAAI;YACF,GAAG,CAAC,KAAK,CAAC,2BAA2B,UAAU,EAAE,CAAC,CAAC;YACnD,MAAM,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YACzD,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAW,CAAC;YACnD,GAAG,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;SAClD;QAAC,MAAM;YACN,GAAG,CAAC,KAAK,CAAC,kBAAkB,UAAU,EAAE,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,aAAa,KAAK,QAAQ,IAAI,aAAa,KAAK,IAAI,EAAE;YAC/D,GAAG,CAAC,KAAK,CAAC,yDAAyD,CAAC,CAAC;SACtE;QACD,MAAM,UAAU,GAAG,aAAuB,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;QACpC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;QAClC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;IAC9B,CAAC;IAED,YAAY,CAAC,SAAiB;QAC5B,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,OAAO,CAAC;IACzC,CAAC;IAED,SAAS;QACP,IAAI;YACF,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC7B;QAAC,MAAM;YACN,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,kBAAkB,CAAC,CAAC;YAC5C,GAAG,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;YAC5C,OAAO,EAAE,CAAC;SACX;IACH,CAAC;CACF","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\nimport * as fs from 'node:fs';\n\nimport YAML from 'yaml';\n\nimport LogTask from './logtask/index.js';\n\nexport interface InputType {\n  description?: string;\n  required?: boolean;\n  default?: string;\n}\nexport interface OutputType {\n  description?: string;\n}\nexport interface Runs {\n  using: string;\n  main: string;\n}\nexport interface Branding {\n  color: string;\n  icon: string;\n}\nexport type InputsType = { [id: string]: InputType };\nexport type OutputsType = { [id: string]: OutputType };\n\nexport default class Action {\n  // Load the action.yml\n\n  public name: string;\n\n  public description: string;\n\n  public branding: Branding;\n\n  public inputs: InputsType;\n\n  public outputs: OutputsType;\n\n  public runs: Runs;\n\n  public path: string;\n\n  constructor(actionPath: string) {\n    const log = new LogTask('action');\n    this.path = actionPath;\n    let tmpActionYaml = null;\n    try {\n      log.debug(`loading action.yml from ${actionPath}`);\n      const actionString = fs.readFileSync(actionPath, 'utf8');\n      tmpActionYaml = YAML.parse(actionString) as Action;\n      log.success('loaded configuration successfully');\n    } catch {\n      log.error(`failed to load ${actionPath}`);\n    }\n    if (typeof tmpActionYaml !== 'object' || tmpActionYaml === null) {\n      log.error(\"action.yml file read in isn't an object (no yaml in it)\");\n    }\n    const actionYaml = tmpActionYaml as Action;\n    this.name = actionYaml.name;\n    this.description = actionYaml.description;\n    this.branding = actionYaml.branding;\n    this.inputs = actionYaml.inputs;\n    this.outputs = actionYaml.outputs;\n    this.runs = actionYaml.runs;\n  }\n\n  inputDefault(inputName: string): string | undefined {\n    return this.inputs[inputName]?.default;\n  }\n\n  stringify(): string {\n    try {\n      return YAML.stringify(this);\n    } catch {\n      const log = new LogTask('action:stringify');\n      log.error('failed to stringify action.yml');\n      return '';\n    }\n  }\n}\n"]}