{"version":3,"file":"generate-docs.js","sourceRoot":"","sources":["../../src/generate-docs.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,MAAM,MAAM,aAAa,CAAC;AACjC,OAAO,OAAO,MAAM,oBAAoB,CAAC;AACzC,OAAO,IAAI,MAAM,WAAW,CAAC;AAC7B,OAAO,aAAa,MAAM,qBAAqB,CAAC;AAEhD,MAAM,CAAC,MAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;AAEnC;;;GAGG;AACH,MAAM,CAAC,KAAK,UAAU,YAAY;IAChC,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,mBAAmB,CAAC,CAAC;IAC7C,KAAK,MAAM,OAAO,IAAI,MAAM,CAAC,QAAQ,EAAE;QACrC,IAAI;YACF,4CAA4C;YAC5C,MAAM,aAAa,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;SACtC;QAAC,OAAO,KAAU,EAAE;YACnB,IAAI,KAAK,IAAI,SAAS,IAAI,KAAK,IAAI,KAAK,CAAC,OAAO;gBAC9C,OAAO,GAAG,CAAC,IAAI,CAAC,6BAA6B,OAAO,KAAK,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;SAC7E;KACF;IACD,MAAM,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IAEjC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC;AACtB,CAAC","sourcesContent":["/**\n * This TypeScript code imports various modules and defines a function named 'generateDocs'.\n * The function is responsible for generating documentation for the README.md file based on the provided inputs.\n * It iterates through each section defined in the 'inputs.sections' array and calls the 'updateSection' function to update the corresponding section in the README.md file.\n * If an error occurs during the update of a section, it logs the error message and stops the process.\n * Finally, it saves the updated README.md file and calls the 'save' function.\n */\n\nimport Inputs from './inputs.js';\nimport LogTask from './logtask/index.js';\nimport save from './save.js';\nimport updateSection from './sections/index.js';\n\nexport const inputs = new Inputs();\n\n/**\n * Generates documentation for the README.md file.\n * @returns {Promise<void>} A promise that resolves once the documentation is generated.\n */\nexport async function generateDocs(): Promise<void> {\n  const log = new LogTask('generating readme');\n  for (const section of inputs.sections) {\n    try {\n      // eslint-disable-next-line no-await-in-loop\n      await updateSection(section, inputs);\n    } catch (error: any) {\n      if (error && 'message' in error && error.message)\n        return log.fail(`Error occurred in section ${section}. ${error.message}`);\n    }\n  }\n  inputs.readmeEditor.dumpToFile();\n\n  return save(inputs);\n}\n"]}