{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,aAAa,CAAC;AACjC,OAAO,OAAO,MAAM,oBAAoB,CAAC;AACzC,OAAO,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAC;AACxD,OAAO,IAAI,MAAM,WAAW,CAAC;AAC7B;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,cAAc;IAClC,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,wBAAwB,CAAC,CAAC;IAClD,MAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;IAC5B,MAAM,SAAS,GAAG,IAAI,eAAe,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IACnD,MAAM,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC3B,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AAC3B,CAAC;AAED,MAAM,cAAc,EAAE,CAAC","sourcesContent":["import Inputs from './inputs.js';\nimport LogTask from './logtask/index.js';\nimport { ReadmeGenerator } from './readme-generator.js';\nimport save from './save.js';\n/**\n * Creates a ReadmeGenerator instance and generates docs.\n */\nexport async function generateReadme(): Promise<void> {\n  const log = new LogTask('Generate Documentation');\n  const inputs = new Inputs();\n  const generator = new ReadmeGenerator(inputs, log);\n  await generator.generate();\n  return save(inputs, log);\n}\n\nawait generateReadme();\n"]}