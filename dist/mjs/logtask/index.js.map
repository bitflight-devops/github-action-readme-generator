{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/logtask/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as core from '@actions/core';\nimport chalkPkg from 'chalk';\nimport * as emoji from 'node-emoji';\n\nconst {\n  bgRedBright,\n  cyan,\n  green,\n  greenBright,\n  red,\n  redBright,\n  white,\n  whiteBright,\n  yellow,\n  yellowBright,\n} = chalkPkg;\nconst NO_GROUP = 0;\nconst START_GROUP = 1;\nconst END_GROUP = 2;\nconst IS_ERROR = 3;\nconst IS_FAILED = 5;\nconst IS_TITLE = 6;\n\nexport default class LogTask {\n  static ingroup_setting: { [key: string]: boolean } = {};\n\n  static indentWidth = 5;\n\n  static isDebug(): boolean {\n    return core.isDebug() || !!process.env.DEBUG;\n  }\n\n  name: string;\n\n  constructor(name: string) {\n    this.name = name?.trim();\n    this.ingroup = false;\n  }\n\n  get ingroup(): boolean {\n    return LogTask.ingroup_setting[this.name] ?? false;\n  }\n\n  set ingroup(value: boolean) {\n    LogTask.ingroup_setting[this.name] = value;\n  }\n\n  async logStep(\n    emojiStr: string,\n    step: string,\n    description: string,\n    startGroup = NO_GROUP,\n  ): Promise<void> {\n    if (step.length > LogTask.indentWidth) {\n      LogTask.indentWidth = step.length;\n    }\n    let failed = false;\n    let desc: string;\n    switch (step) {\n      case 'START': {\n        desc = yellowBright(`${description}`);\n        break;\n      }\n      case 'INFO': {\n        desc = green(`${description}`);\n        break;\n      }\n      case 'WARN': {\n        desc = yellow(`${description}`);\n        break;\n      }\n      case 'SUCCESS': {\n        desc = greenBright(`${description}`);\n        break;\n      }\n      case 'FAILURE': {\n        desc = redBright(`${description}`);\n        failed = true;\n        break;\n      }\n      case 'ERROR': {\n        desc = redBright(`${description}`);\n        break;\n      }\n      case '#####': {\n        desc = cyan(`${description}`);\n        break;\n      }\n      default: {\n        desc = white(`${description}`);\n        break;\n      }\n    }\n\n    let msg: string;\n    if (this.ingroup && !process.env.GITHUB_ACTIONS) {\n      const indentStr = [...Array.from({ length: LogTask.indentWidth }).fill(' ')].join('');\n      msg = `${indentStr}   ${emojiStr}: ${this.name} > ${desc}`;\n    } else {\n      const stepStr = [\n        step,\n        ...Array.from({ length: LogTask.indentWidth - step.length }).fill(' '),\n      ].join('');\n\n      msg = `[${stepStr}][${this.name}] ${emojiStr}: ${desc}`;\n    }\n    switch (step) {\n      case 'START': {\n        msg = yellowBright(`${msg}`);\n        break;\n      }\n      case 'SUCCESS': {\n        msg = whiteBright(`${msg}`);\n        break;\n      }\n      case 'FAILURE': {\n        msg = red(`${msg}`);\n        break;\n      }\n      case 'ERROR': {\n        msg = red(`${msg}`);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n    const isErroring = startGroup === IS_ERROR || startGroup === IS_FAILED;\n\n    if (process.env.GITHUB_ACTIONS) {\n      switch (startGroup) {\n        case START_GROUP: {\n          core.startGroup(msg);\n\n          break;\n        }\n        case END_GROUP: {\n          core.endGroup();\n\n          break;\n        }\n        case IS_ERROR: {\n          core.error(bgRedBright(msg));\n\n          break;\n        }\n        case IS_FAILED: {\n          core.setFailed(bgRedBright(msg));\n\n          break;\n        }\n        default: {\n          core.info(msg);\n        }\n      }\n    } else if (isErroring) {\n      if (failed) {\n        core.setFailed(msg);\n      } else {\n        core.error(msg);\n      }\n    } else {\n      core.info(msg);\n    }\n  }\n\n  debug(description = ''): void {\n    if (LogTask.isDebug() && description !== '') {\n      this.logStep('üëÅÔ∏è‚Äçüó®Ô∏è', 'DEBUG', description);\n    }\n  }\n\n  start(description = ''): void {\n    const desc = description === '' ? `Starting ${this.name}...` : description;\n\n    this.logStep(emoji.get('rocket') ?? '', 'START', desc, START_GROUP);\n  }\n\n  info(description = ''): void {\n    this.logStep(emoji.get('sparkles') ?? '', 'INFO', description);\n  }\n\n  warn(description = ''): void {\n    this.logStep(emoji.get('anger') ?? '', 'WARN', description);\n  }\n\n  success(description = '', ingroup = true): void {\n    const desc = description === '' ? `Completed ${this.name}.` : description;\n    if (ingroup) {\n      this.ingroup = false;\n      if (process.env.GITHUB_ACTIONS) {\n        core.endGroup();\n      }\n    }\n    this.logStep(emoji.get('white_check_mark') ?? '', 'SUCCESS', desc);\n  }\n\n  fail(description = '', ingroup = true): void {\n    const desc = description === '' ? `Failed ${this.name}.` : description;\n    if (ingroup) {\n      this.ingroup = false;\n      if (process.env.GITHUB_ACTIONS) {\n        core.endGroup();\n      }\n    }\n    const msgtype = process.env.GITHUB_ACTIONS ? IS_FAILED : IS_ERROR;\n    this.logStep(emoji.get('x') ?? '', 'FAILURE', desc, msgtype);\n  }\n\n  error(description = ''): void {\n    this.logStep(emoji.get('x') ?? '', 'ERROR', description, IS_ERROR);\n  }\n\n  title(description = ''): void {\n    this.logStep('üìì', '#####', description, IS_TITLE);\n  }\n}\n"]}