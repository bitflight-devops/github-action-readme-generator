{"version":3,"file":"save.js","sourceRoot":"","sources":["../../src/save.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,OAAO,EAAE,kBAAkB,EAAE,MAAM,aAAa,CAAC;AAIjD;;;GAGG;AACH,MAAM,CAAC,OAAO,UAAU,IAAI,CAAC,MAAc,EAAE,GAAY;IACvD,MAAM,UAAU,GAAG,IAAI,kBAAkB,EAAE,CAAC;IAC5C,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IAC9B,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,KAAK,IAAI,EAAE;QACrC,IAAI;YACF,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SACpC;QAAC,OAAO,KAAK,EAAE;YACd,GAAG,CAAC,KAAK,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC;SACvB;KACF;AACH,CAAC","sourcesContent":["/**\n * This code exports a function named 'save' which takes an instance of the 'Inputs' class as its parameter.\n * The function reads the configuration inputs from the 'inputs' parameter and uses them to create a new instance of the 'GHActionDocsConfig' class.\n * If the 'save' property is set to true in the configuration inputs, the function saves the configuration to the file specified in the 'configPath' property of the 'inputs' parameter.\n * This script is used to update the usage section in the README.md file to match the contents of the action.yml file.\n */\n\nimport { GHActionDocsConfig } from './config.js';\nimport Inputs from './inputs.js';\nimport LogTask from './logtask/index.js';\n\n/**\n * This script rebuilds the usage section in the README.md to be consistent with the action.yml\n * @param {Inputs} inputs - the inputs class\n */\nexport default function save(inputs: Inputs, log: LogTask): void {\n  const docsConfig = new GHActionDocsConfig();\n  docsConfig.loadInputs(inputs);\n  if (inputs.config.get().save === true) {\n    try {\n      docsConfig.save(inputs.configPath);\n    } catch (error) {\n      log.error(`${error}`);\n    }\n  }\n}\n"]}