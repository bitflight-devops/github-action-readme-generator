{"version":3,"file":"update-badges.js","sourceRoot":"","sources":["../../../src/sections/update-badges.ts"],"names":[],"mappings":"AAEA,OAAO,OAAO,MAAM,qBAAqB,CAAC;AAO1C,MAAM,CAAC,OAAO,UAAU,YAAY,CAAC,KAAa,EAAE,MAAc;IAChE,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC;IAC/B,MAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IAChE,MAAM,MAAM,GAAa,EAAE,CAAC;IAC5B,MAAM,KAAK,GAAS;QAClB,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC;QACjC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC;KAChC,CAAC;IAEF;;;OAGG;IACH,SAAS,YAAY;QACnB,MAAM,OAAO,GAAG,sBAAsB,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC;QAClE,OAAO;YACL;gBACE,GAAG,EAAE,2CAA2C,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,6DAA6D;gBACtI,GAAG,EAAE,SAAS;gBACd,GAAG,EAAE,GAAG,OAAO,kBAAkB;aAClC;YACD;gBACE,GAAG,EAAE,8CAA8C,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,6DAA6D;gBACzI,GAAG,EAAE,SAAS;gBACd,GAAG,EAAE,GAAG,OAAO,kBAAkB;aAClC;YACD;gBACE,GAAG,EAAE,6CAA6C,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,gCAAgC;gBAC3G,GAAG,EAAE,QAAQ;aACd;YACD;gBACE,GAAG,EAAE,wCAAwC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,gCAAgC;gBACtG,GAAG,EAAE,aAAa;gBAClB,GAAG,EAAE,GAAG,OAAO,SAAS;aACzB;YACD;gBACE,GAAG,EAAE,2CAA2C,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,sCAAsC;gBAC/G,GAAG,EAAE,WAAW;aACjB;SACF,CAAC;IACJ,CAAC;IACD;;OAEG;IACH,SAAS,aAAa,CAAC,IAAY;QACjC,MAAM,aAAa,GAAG,aAAa,IAAI,CAAC,GAAG,UAAU,IAAI,CAAC,GAAG,IAAI,EAAE,MAAM,CAAC;QAC1E,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,OAAO,YAAY,IAAI,CAAC,GAAG,KAAK,aAAa,MAAM,CAAC;SACrD;QACD,OAAO,aAAa,CAAC;IACvB,CAAC;IACD;;OAEG;IACH,SAAS,cAAc;QACrB,MAAM,UAAU,GAAG,EAAE,CAAC;QACtB,KAAK,MAAM,CAAC,IAAI,MAAM,EAAE;YACtB,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;SACnC;QACD,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,GAAG,CAAC,KAAK,EAAE,CAAC;IAEZ,oBAAoB;IACpB,IAAI,gBAAgB,EAAE;QACpB,MAAM,CAAC,IAAI,CAAC,GAAG,YAAY,EAAE,CAAC,CAAC;KAChC;IACD,MAAM,OAAO,GAAG,cAAc,EAAE,CAAC;IACjC,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAElD,GAAG,CAAC,OAAO,EAAE,CAAC;AAChB,CAAC","sourcesContent":["import type { Repo } from '../helpers.js';\nimport type Inputs from '../inputs.js';\nimport LogTask from '../logtask/index.js';\n\nexport interface IBadge {\n  alt: string;\n  img: string;\n  url?: string;\n}\nexport default function updateBadges(token: string, inputs: Inputs): void {\n  const log = new LogTask(token);\n  const enableVersioning = inputs.config.get('versioning:badges');\n  const badges: IBadge[] = [];\n  const repos: Repo = {\n    owner: inputs.config.get('owner'),\n    repo: inputs.config.get('repo'),\n  };\n\n  /**\n   * Generate github badges.\n   * @param githubId\n   */\n  function githubBadges(): IBadge[] {\n    const repoUrl = `https://github.com/${repos.owner}/${repos.repo}`;\n    return [\n      {\n        img: `https://img.shields.io/github/v/release/${repos.owner}/${repos.repo}?display_name=tag&sort=semver&logo=github&style=flat-square`,\n        alt: 'Release',\n        url: `${repoUrl}/releases/latest`,\n      },\n      {\n        img: `https://img.shields.io/github/release-date/${repos.owner}/${repos.repo}?display_name=tag&sort=semver&logo=github&style=flat-square`,\n        alt: 'Release',\n        url: `${repoUrl}/releases/latest`,\n      },\n      {\n        img: `https://img.shields.io/github/last-commit/${repos.owner}/${repos.repo}?logo=github&style=flat-square`,\n        alt: 'Commit',\n      },\n      {\n        img: `https://img.shields.io/github/issues/${repos.owner}/${repos.repo}?logo=github&style=flat-square`,\n        alt: 'Open Issues',\n        url: `${repoUrl}/issues`,\n      },\n      {\n        img: `https://img.shields.io/github/downloads/${repos.owner}/${repos.repo}/total?logo=github&style=flat-square`,\n        alt: 'Downloads',\n      },\n    ];\n  }\n  /**\n   * Generates a badge.\n   */\n  function generateBadge(item: IBadge): string {\n    const badgeTemplate = `<img src=\"${item.img}\" alt=\"${item.alt || ''}\" />`;\n    if (item.url) {\n      return `<a href=\"${item.url}\">${badgeTemplate}</a>`;\n    }\n    return badgeTemplate;\n  }\n  /**\n   * Generates all badges.\n   */\n  function generateBadges(): string[] {\n    const badgeArray = [];\n    for (const b of badges) {\n      badgeArray.push(generateBadge(b));\n    }\n    return [badgeArray.join('')];\n  }\n\n  log.start();\n\n  // Add Github badges\n  if (enableVersioning) {\n    badges.push(...githubBadges());\n  }\n  const content = generateBadges();\n  inputs.readmeEditor.updateSection(token, content);\n\n  log.success();\n}\n"]}