{"version":3,"file":"update-badges.js","sourceRoot":"","sources":["../../../src/sections/update-badges.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAIH,OAAO,OAAO,MAAM,qBAAqB,CAAC;AAW1C;;;GAGG;AACH,SAAS,YAAY,CAAC,KAAa,EAAE,IAAY;IAC/C,MAAM,OAAO,GAAG,sBAAsB,KAAK,IAAI,IAAI,EAAE,CAAC;IACtD,OAAO;QACL;YACE,GAAG,EAAE,2CAA2C,KAAK,IAAI,IAAI,6DAA6D;YAC1H,GAAG,EAAE,gBAAgB;YACrB,GAAG,EAAE,GAAG,OAAO,kBAAkB;SAClC;QACD;YACE,GAAG,EAAE,8CAA8C,KAAK,IAAI,IAAI,6DAA6D;YAC7H,GAAG,EAAE,iBAAiB;YACtB,GAAG,EAAE,GAAG,OAAO,kBAAkB;SAClC;QACD;YACE,GAAG,EAAE,6CAA6C,KAAK,IAAI,IAAI,gCAAgC;YAC/F,GAAG,EAAE,QAAQ;SACd;QACD;YACE,GAAG,EAAE,wCAAwC,KAAK,IAAI,IAAI,gCAAgC;YAC1F,GAAG,EAAE,aAAa;YAClB,GAAG,EAAE,GAAG,OAAO,SAAS;SACzB;QACD;YACE,GAAG,EAAE,2CAA2C,KAAK,IAAI,IAAI,sCAAsC;YACnG,GAAG,EAAE,WAAW;SACjB;KACF,CAAC;AACJ,CAAC;AAED;;;;GAIG;AACH,SAAS,aAAa,CAAC,IAAY,EAAE,GAAY;IAC/C,MAAM,aAAa,GAAG,aAAa,IAAI,CAAC,GAAG,UAAU,IAAI,CAAC,GAAG,IAAI,EAAE,MAAM,CAAC;IAC1E,GAAG,CAAC,IAAI,CAAC,oBAAoB,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACzC,IAAI,IAAI,CAAC,GAAG,EAAE;QACZ,OAAO,YAAY,IAAI,CAAC,GAAG,KAAK,aAAa,MAAM,CAAC;KACrD;IACD,OAAO,aAAa,CAAC;AACvB,CAAC;AAED;;;GAGG;AACH,SAAS,cAAc,CAAC,MAAgB,EAAE,GAAY;IACpD,MAAM,UAAU,GAAa,EAAE,CAAC;IAChC,KAAK,MAAM,CAAC,IAAI,MAAM,EAAE;QACtB,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;KACxC;IACD,GAAG,CAAC,KAAK,CAAC,iBAAiB,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC;IAChD,OAAO,UAAU,CAAC;AACpB,CAAC;AACD,MAAM,CAAC,OAAO,UAAU,YAAY,CAAC,KAAoB,EAAE,MAAc;IACvE,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC;IAC/B,MAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,KAAK,CAAC;IAChE,GAAG,CAAC,IAAI,CAAC,qBAAqB,gBAAgB,EAAE,CAAC,CAAC;IAElD,GAAG,CAAC,KAAK,EAAE,CAAC;IACZ,oBAAoB;IACpB,IAAI,gBAAgB,EAAE;QACpB,MAAM,MAAM,GAAa,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QACjE,MAAM,OAAO,GAAG,cAAc,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACrD,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KACnD;IACD,GAAG,CAAC,OAAO,EAAE,CAAC;AAChB,CAAC","sourcesContent":["/**\n * This TypeScript code imports necessary modules and defines a function named 'updateBadges' which takes a token (ReadmeSection) and an instance of the 'Inputs' class as its parameters.\n * The function is responsible for updating the badges section in the README.md file based on the provided inputs.\n * It utilizes the 'LogTask' class for logging purposes.\n */\n\nimport { ReadmeSection } from '../constants.js';\nimport type Inputs from '../inputs.js';\nimport LogTask from '../logtask/index.js';\n\n/**\n * Interface for a badge.\n */\nexport interface IBadge {\n  alt: string;\n  img: string;\n  url?: string;\n}\n\n/**\n * Generate GitHub badges.\n * @returns {IBadge[]} - The array of GitHub badges.\n */\nfunction githubBadges(owner: string, repo: string): IBadge[] {\n  const repoUrl = `https://github.com/${owner}/${repo}`;\n  return [\n    {\n      img: `https://img.shields.io/github/v/release/${owner}/${repo}?display_name=tag&sort=semver&logo=github&style=flat-square`,\n      alt: 'Release by tag',\n      url: `${repoUrl}/releases/latest`,\n    },\n    {\n      img: `https://img.shields.io/github/release-date/${owner}/${repo}?display_name=tag&sort=semver&logo=github&style=flat-square`,\n      alt: 'Release by date',\n      url: `${repoUrl}/releases/latest`,\n    },\n    {\n      img: `https://img.shields.io/github/last-commit/${owner}/${repo}?logo=github&style=flat-square`,\n      alt: 'Commit',\n    },\n    {\n      img: `https://img.shields.io/github/issues/${owner}/${repo}?logo=github&style=flat-square`,\n      alt: 'Open Issues',\n      url: `${repoUrl}/issues`,\n    },\n    {\n      img: `https://img.shields.io/github/downloads/${owner}/${repo}/total?logo=github&style=flat-square`,\n      alt: 'Downloads',\n    },\n  ];\n}\n\n/**\n * Generates a badge HTML markup.\n * @param {IBadge} item - The badge object.\n * @returns {string} - The HTML markup for the badge.\n */\nfunction generateBadge(item: IBadge, log: LogTask): string {\n  const badgeTemplate = `<img src=\"${item.img}\" alt=\"${item.alt || ''}\" />`;\n  log.info(`Generating badge ${item.alt}`);\n  if (item.url) {\n    return `<a href=\"${item.url}\">${badgeTemplate}</a>`;\n  }\n  return badgeTemplate;\n}\n\n/**\n * Generates all badges HTML markup.\n * @returns {string[]} - The array of HTML markup for all badges.\n */\nfunction generateBadges(badges: IBadge[], log: LogTask): string[] {\n  const badgeArray: string[] = [];\n  for (const b of badges) {\n    badgeArray.push(generateBadge(b, log));\n  }\n  log.debug(`Total badges: ${badgeArray.length}`);\n  return badgeArray;\n}\nexport default function updateBadges(token: ReadmeSection, inputs: Inputs): void {\n  const log = new LogTask(token);\n  const enableVersioning = inputs.config.get()?.versioning?.badge;\n  log.info(`Versioning badge: ${enableVersioning}`);\n\n  log.start();\n  // Add GitHub badges\n  if (enableVersioning) {\n    const badges: IBadge[] = githubBadges(inputs.owner, inputs.repo);\n    const content = generateBadges(badges, log).join('');\n    inputs.readmeEditor.updateSection(token, content);\n  }\n  log.success();\n}\n"]}