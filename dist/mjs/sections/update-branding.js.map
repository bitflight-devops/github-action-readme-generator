{"version":3,"file":"update-branding.js","sourceRoot":"","sources":["../../../src/sections/update-branding.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport * as feather from 'feather-icons';\n\nimport type { Branding } from '../Action.js';\nimport {\n  DEFAULT_BRAND_COLOR,\n  GITHUB_ACTIONS_BRANDING_ICONS,\n  GITHUB_ACTIONS_OMITTED_ICONS,\n} from '../constants.js';\nimport type Inputs from '../inputs.js';\nimport LogTask from '../logtask/index.js';\nimport SVGEditor from '../svg-editor.mjs';\n\n/**\n * Wiith thanks to\n * https://github.com/haya14busa/github-action-brandings/blob/master/main.js\n * for the urls to the branding images.\n */\ntype conforms<T, V> = T extends V ? T : V;\ntype Maybe<T> = T | undefined;\ntype FeatherIconKeysArray = keyof typeof feather.icons;\ntype FeatherIconKeys<T extends string, R = FeatherIconKeysArray> = conforms<T, R>;\nfunction featherType<T extends FeatherIconKeysArray | string>(iconName: T): FeatherIconKeys<T> {\n  return iconName as FeatherIconKeys<T>;\n}\nexport interface IBranding {\n  alt: string;\n  img: string;\n  url?: string;\n}\n\n/**\n * Generates a svg branding image.\n */\nfunction generateSvgImage<T extends FeatherIconKeysArray>(\n  svgPath: string,\n  icon: FeatherIconKeys<T>,\n  bgcolor: string,\n): void {\n  const svgEditor = new SVGEditor();\n  svgEditor.generateSvgImage(svgPath, icon, bgcolor);\n}\n\nexport function getValidIconName(brand?: Branding): FeatherIconKeysArray {\n  if (brand && typeof brand.icon === 'string') {\n    if (GITHUB_ACTIONS_BRANDING_ICONS.has(brand.icon)) {\n      return featherType(brand.icon);\n    }\n    if (GITHUB_ACTIONS_OMITTED_ICONS.has(brand.icon)) {\n      throw new Error(\n        `No valid branding icon name found: ${brand.icon} is part of the list of omitted icons. `,\n      );\n    }\n    throw new Error(\n      `No valid branding icon name found: ${brand.icon} is not a valid icon from the feather-icons list`,\n    );\n  }\n  throw new Error(`No valid branding icon name found: action.yml branding is undefined`);\n}\n\nexport function generateImgMarkup(inputs: Inputs, width = '15%'): string {\n  const log = new LogTask('generateImgMarkup');\n\n  const brand: Branding = inputs.action.branding;\n  const iconName = getValidIconName(brand);\n  const color = brand.color ?? DEFAULT_BRAND_COLOR;\n  const svgPath = inputs.config.get('branding_svg_path') as Maybe<string>;\n  const result = `<img src=\"${svgPath}\" width=\"${width}\" align=\"center\" alt=\"branding<icon:${iconName} color:${color}>\" />`;\n\n  if (svgPath) {\n    log.info(`Generating action.yml branding image for ${iconName}`);\n    const svg = inputs.config.get('image_generated') as Maybe<string>;\n    const hash = `${iconName}${color}`;\n    if (svg && hash.localeCompare(svg) !== 0) {\n      generateSvgImage(svgPath, iconName, color);\n      inputs.config.set('image_generated', hash);\n    }\n    return result;\n  }\n  log.error(`No branding_svg_path provided or it is empty string, can't create the file!`);\n  return `<!-- ERROR: no branding path found = ${result} -->`;\n}\nexport default function updateBranding(token: string, inputs: Inputs): void {\n  const log = new LogTask(token);\n\n  log.info(`Brand details: ${JSON.stringify(inputs.action.branding)}`);\n\n  log.start();\n\n  const content = generateImgMarkup(inputs);\n  inputs.readmeEditor.updateSection(token, content);\n  if (content && content !== '') {\n    log.success('branding svg successfully created');\n  } else {\n    log.fail('branding svg failed to be created');\n  }\n}\n"]}