{"version":3,"file":"update-branding.js","sourceRoot":"","sources":["../../../src/sections/update-branding.ts"],"names":[],"mappings":"AAKA,OAAO,OAAO,MAAM,qBAAqB,CAAC;AAC1C,OAAO,SAAS,EAAE,EAAE,6BAA6B,EAAE,MAAM,mBAAmB,CAAC;AAU7E,SAAS,WAAW,CAA0C,QAAW;IACvE,OAAO,QAA8B,CAAC;AACxC,CAAC;AAOD;;GAEG;AACH,SAAS,gBAAgB,CACvB,OAAe,EACf,IAAiD,EACjD,OAAe;IAEf,MAAM,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;IAClC,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACnD,qBAAqB;IACrB,gEAAgE;IAChE,kBAAkB;IAClB,YAAY;IACZ,kBAAkB;IAClB,8CAA8C;IAC9C,8DAA8D;IAC9D,6DAA6D;IAC7D,oBAAoB;IACpB,0EAA0E;IAC1E,IAAI;AACN,CAAC;AACD,SAAS,iBAAiB,CAAC,OAAe,EAAE,KAAe;IACzD,OAAO,aAAa,OAAO,UAAU,KAAK,CAAC,IAAI,IAAI,EAAE,MAAM,CAAC;AAC9D,CAAC;AACD,MAAM,CAAC,OAAO,UAAU,cAAc,CAAC,KAAa,EAAE,MAAc;IAClE,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC;IAC/B,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,iCAAiC,CAAW,CAAC;IAE/E,GAAG,CAAC,IAAI,CAAC,kBAAkB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAErE,MAAM,KAAK,GAAa,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;IAE/C,GAAG,CAAC,KAAK,EAAE,CAAC;IACZ,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,QAAQ,IAAI,6BAA6B,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;QACnF,MAAM,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACzC,GAAG,CAAC,IAAI,CAAC,4CAA4C,QAAQ,EAAE,CAAC,CAAC;QAEjE,gBAAgB,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QACjD,MAAM,OAAO,GAAG,iBAAiB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAClD,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KACnD;SAAM;QACL,GAAG,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;QAChF,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;KAC9C;IACD,GAAG,CAAC,OAAO,EAAE,CAAC;AAChB,CAAC","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport * as feather from 'feather-icons';\n\nimport type { Branding } from '../Action.js';\nimport type Inputs from '../inputs.js';\nimport LogTask from '../logtask/index.js';\nimport SVGEditor, { GITHUB_ACTIONS_BRANDING_ICONS } from '../svg-editor.mjs';\n\n/**\n * Wiith thanks to\n * https://github.com/haya14busa/github-action-brandings/blob/master/main.js\n * for the urls to the branding images.\n */\ntype conforms<T, V> = T extends V ? T : V;\ntype FeatherIconKeysArray = keyof typeof feather.icons;\ntype FeatherIconKeys<T extends string, R = FeatherIconKeysArray> = conforms<T, R>;\nfunction featherType<T extends FeatherIconKeysArray | string>(iconName: T): FeatherIconKeys<T> {\n  return iconName as FeatherIconKeys<T>;\n}\nexport interface IBranding {\n  alt: string;\n  img: string;\n  url?: string;\n}\n\n/**\n * Generates a svg branding image.\n */\nfunction generateSvgImage(\n  svgPath: string,\n  icon: FeatherIconKeys<keyof typeof feather.icons>,\n  bgcolor: string,\n): void {\n  const svgEditor = new SVGEditor();\n  svgEditor.generateSvgImage(svgPath, icon, bgcolor);\n  //   const svgOut = [\n  //     '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>',\n  //     draw.svg(),\n  //     '\\n',\n  //   ].join('\\n');\n  //   log.info(`SVG data to write: ${svgOut}`);\n  //   fs.mkdirSync(path.dirname(svgPath), { recursive: true });\n  //   fs.writeFileSync(svgPath, svgOut, { encoding: 'utf8' });\n  // } catch (error) {\n  //   log.error(`Error generating svg image: ${svgPath}. Error: ${error}`);\n  // }\n}\nfunction generateImgMarkup(svgPath: string, brand: Branding): string {\n  return `<img src=\"${svgPath}\" alt=\"${brand.icon ?? ''}\" />`;\n}\nexport default function updateBranding(token: string, inputs: Inputs): void {\n  const log = new LogTask(token);\n  const svgPath = inputs.config.get('github_action_branding_svg_path') as string;\n\n  log.info(`Brand details: ${JSON.stringify(inputs.action.branding)}`);\n\n  const brand: Branding = inputs.action.branding;\n\n  log.start();\n  if (typeof brand.icon === 'string' && GITHUB_ACTIONS_BRANDING_ICONS.has(brand.icon)) {\n    const iconName = featherType(brand.icon);\n    log.info(`Generating action.yml branding image for ${iconName}`);\n\n    generateSvgImage(svgPath, iconName, brand.color);\n    const content = generateImgMarkup(svgPath, brand);\n    inputs.readmeEditor.updateSection(token, content);\n  } else {\n    log.warn('No icon specified for branding in action.yml. Leaving section blank');\n    inputs.readmeEditor.updateSection(token, '');\n  }\n  log.success();\n}\n"]}