{"version":3,"file":"update-description.js","sourceRoot":"","sources":["../../../src/sections/update-description.ts"],"names":[],"mappings":"AAQA,OAAO,OAAO,MAAM,qBAAqB,CAAC;AAG1C,MAAM,CAAC,OAAO,UAAU,iBAAiB,CAAC,KAAoB,EAAE,MAAc;IAC5E,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC;IAE/B,uBAAuB;IACvB,MAAM,OAAO,GAAa,EAAE,CAAC;IAE7B,oCAAoC;IACpC,IAAI,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE;QAC/B,GAAG,CAAC,KAAK,EAAE,CAAC;QACZ,MAAM,IAAI,GAAW,MAAM,CAAC,MAAM,CAAC,WAAW;aAC3C,IAAI,EAAE;aACN,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,mBAAmB;aAC5C,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,4BAA4B;aACnD,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,mCAAmC;aAC3D,UAAU,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC,mCAAmC;QAEpE,GAAG,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,MAAM,wCAAwC,CAAC,CAAC;QACzE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnB,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QAClD,GAAG,CAAC,OAAO,EAAE,CAAC;KACf;AACH,CAAC","sourcesContent":["/**\n * This TypeScript code exports a function named 'updateDescription' which takes a token (ReadmeSection) and an instance of the 'Inputs' class as its parameters.\n * The function is responsible for updating the description section in the README.md file based on the provided inputs.\n * It utilizes the 'LogTask' class for logging purposes.\n * @param {ReadmeSection} token - The token representing the section of the README to update.\n * @param {Inputs} inputs - The Inputs class instance.\n */\nimport type Inputs from '../inputs.js';\nimport LogTask from '../logtask/index.js';\nimport type { ReadmeSection } from './index.js';\n\nexport default function updateDescription(token: ReadmeSection, inputs: Inputs): void {\n  const log = new LogTask(token);\n\n  // Build the new README\n  const content: string[] = [];\n\n  // Build the new description section\n  if (inputs?.action?.description) {\n    log.start();\n    const desc: string = inputs.action.description\n      .trim()\n      .replaceAll('\\r\\n', '\\n') // Convert CR to LF\n      .replaceAll(/ +/g, ' ') // Squash consecutive spaces\n      .replaceAll(' \\n', '\\n') // Squash space followed by newline\n      .replaceAll('\\n\\n', '<br />'); // Convert double return to a break\n\n    log.info(`Writing ${desc.length} characters to the description section`);\n    content.push(desc);\n    inputs.readmeEditor.updateSection(token, content);\n    log.success();\n  }\n}\n"]}