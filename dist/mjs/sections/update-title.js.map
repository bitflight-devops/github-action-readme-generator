{"version":3,"file":"update-title.js","sourceRoot":"","sources":["../../../src/sections/update-title.ts"],"names":[],"mappings":"AASA,OAAO,OAAO,MAAM,qBAAqB,CAAC;AAC1C,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AAEzD,MAAM,CAAC,OAAO,UAAU,WAAW,CACjC,YAA2B,EAC3B,MAAc;IAEd,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,YAAY,CAAC,CAAC;IAEtC,uBAAuB;IACvB,MAAM,OAAO,GAAa,EAAE,CAAC;IAC7B,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,IAAI,SAAS,GAAG,EAAE,CAAC;IAEnB,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;QACtB,GAAG,CAAC,KAAK,EAAE,CAAC;QACZ,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QAC1B,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,0BAA0B,CAAY,EAAE;YAC5D,SAAS,GAAG,GAAG,iBAAiB,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC;SACrD;QACD,GAAG,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,MAAM,0BAA0B,CAAC,CAAC;QAC3D,MAAM,KAAK,GAAG,KAAK,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,CAAW,GACxE,MAAM,CAAC,MAAM,CAAC,IAChB,EAAE,CAAC;QACH,GAAG,CAAC,IAAI,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC;QAC5B,8BAA8B;QAC9B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpB,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,YAAY,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;QAE/D,GAAG,CAAC,OAAO,EAAE,CAAC;KACf;IACD,MAAM,GAAG,GAA2B,EAAE,CAAC;IACvC,GAAG,CAAC,YAAY,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvC,OAAO,GAAG,CAAC;AACb,CAAC","sourcesContent":["/**\n * This TypeScript code exports a function named 'updateTitle' which takes a sectionToken (ReadmeSection) and an instance of the 'Inputs' class as its parameters.\n * The function is responsible for updating the title section in the README.md file based on the provided inputs.\n * It utilizes the 'LogTask' class for logging purposes, the 'generateImgMarkup' function from './update-branding.js' for generating image markup.\n * @param {ReadmeSection} sectionToken - The sectionToken representing the section of the README to update.\n * @param {Inputs} inputs - The Inputs class instance.\n */\nimport { ReadmeSection } from '../constants.js';\nimport type Inputs from '../inputs.js';\nimport LogTask from '../logtask/index.js';\nimport { generateImgMarkup } from './update-branding.js';\n\nexport default function updateTitle(\n  sectionToken: ReadmeSection,\n  inputs: Inputs,\n): Record<string, string> {\n  const log = new LogTask(sectionToken);\n\n  // Build the new README\n  const content: string[] = [];\n  let name = '';\n  let svgInline = '';\n\n  if (inputs.action.name) {\n    log.start();\n    name = inputs.action.name;\n    if (inputs.config.get('branding_as_title_prefix') as boolean) {\n      svgInline = `${generateImgMarkup(inputs, '60px')} `;\n    }\n    log.info(`Writing ${name.length} characters to the title`);\n    const title = `# ${svgInline}${inputs.config.get('title_prefix') as string}${\n      inputs.action.name\n    }`;\n    log.info(`Title: ${title}`);\n    // Build the new usage section\n    content.push(title);\n    inputs.readmeEditor.updateSection(sectionToken, content, true);\n\n    log.success();\n  }\n  const ret: Record<string, string> = {};\n  ret[sectionToken] = content.join('\\n');\n  return ret;\n}\n"]}