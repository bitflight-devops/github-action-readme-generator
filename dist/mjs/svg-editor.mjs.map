{"version":3,"file":"svg-editor.mjs","sourceRoot":"","sources":["../../src/svg-editor.mts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport * as fs from 'node:fs';\nimport * as path from 'node:path';\n\nimport type { Container } from '@svgdotjs/svg.js';\nimport { registerWindow, SVG } from '@svgdotjs/svg.js';\nimport * as feather from 'feather-icons';\nimport { createSVGDocument, createSVGWindow } from 'svgdom'; /// main-module.js';\n\nimport LogTask from './logtask/index.js';\n\ntype conforms<T, V> = T extends V ? T : V;\ntype FeatherIconKeysArray = keyof typeof feather.icons;\ntype FeatherIconKeys<T extends string, R = FeatherIconKeysArray> = conforms<T, R>;\n// function featherType<T extends FeatherIconKeysArray | string>(iconName: T): FeatherIconKeys<T> {\n//   return iconName as FeatherIconKeys<T>;\n// }\nconst brandingSquareEdgeLengthInPixels = 50;\n\n// https://help.github.com/en/articles/metadata-syntax-for-github-actions#branding\nconst GITHUB_ACTIONS_OMITTED_ICONS = new Set([\n  'coffee',\n  'columns',\n  'divide-circle',\n  'divide-square',\n  'divide',\n  'frown',\n  'hexagon',\n  'key',\n  'meh',\n  'mouse-pointer',\n  'smile',\n  'tool',\n  'x-octagon',\n]);\nexport const GITHUB_ACTIONS_BRANDING_ICONS = new Set(\n  Object.keys(feather.icons).filter((item) => !GITHUB_ACTIONS_OMITTED_ICONS.has(item))\n);\nexport const GITHUB_ACTIONS_BRANDING_COLORS = [\n  'white',\n  'yellow',\n  'blue',\n  'green',\n  'orange',\n  'red',\n  'purple',\n  'gray-dark',\n];\nexport default class SVGEditor {\n  log: LogTask;\n\n  window: any;\n\n  canvas: any;\n\n  document: any;\n\n  constructor() {\n    this.log = new LogTask('SVGEditor');\n  }\n\n  async init(): Promise<void> {\n    if (!this.window) {\n      // returns a window with a document and an svg root node\n      this.window = createSVGWindow();\n\n      const { document } = this.window;\n      // instanceof<typeof createSVGWindow>\n      // register window and document\n      registerWindow(this.window, document);\n      if (!this.canvas) {\n        // create canvas\n        this.canvas = SVG(document.documentElement) as Container;\n      }\n    }\n\n    if (!this.document) {\n      this.document = createSVGDocument();\n    }\n\n    if (!this.canvas) {\n      // create canvas\n      this.canvas = SVG(this.document.documentElement) as Container;\n    }\n  }\n\n  /**\n   * Generates a svg branding image.\n   */\n  generateSvgImage(\n    svgPath = './svg-basic.svg',\n    icon: FeatherIconKeys<keyof typeof feather.icons> = 'book-open',\n    bgcolor = 'blue'\n  ): void {\n    this.init()\n      .then(() => {\n        if (!GITHUB_ACTIONS_BRANDING_ICONS.has(icon)) {\n          this.log.fail(`Invalid icon specified for branding: ${icon}`);\n          return;\n        }\n        const color = GITHUB_ACTIONS_BRANDING_COLORS.includes(bgcolor.toLowerCase())\n          ? bgcolor.toLowerCase()\n          : 'blue';\n\n        const svgData = feather.icons[icon];\n        this.log.info(`SVG data generated for ${icon} at ${svgPath} with color ${color}.`);\n        this.log.debug(`SVG data to ingest: ${svgData.toSvg()}`);\n        if (this.canvas) {\n          const canvas: Container = this.canvas as Container;\n          canvas.clear();\n          for (const attr of Object.keys(svgData.attrs)) {\n            canvas.attr(attr, svgData.attrs[attr]);\n          }\n\n          canvas\n            .size(brandingSquareEdgeLengthInPixels, brandingSquareEdgeLengthInPixels)\n            .viewbox(`0 0 ${brandingSquareEdgeLengthInPixels} ${brandingSquareEdgeLengthInPixels}`)\n            .stroke(color.startsWith('white') ? 'white' : 'black')\n            .fill('none');\n          const circleSize = brandingSquareEdgeLengthInPixels / 2;\n          const bggroup = canvas.group();\n          bggroup\n            .id('bg')\n            .circle(circleSize)\n            .fill(color)\n            .radius(circleSize)\n            .cx(circleSize)\n            .cy(circleSize)\n            .stroke({ width: 0 });\n          const fggroup = canvas.group();\n\n          fggroup\n            .id('fg')\n            .size(brandingSquareEdgeLengthInPixels * 0.7, brandingSquareEdgeLengthInPixels * 0.7)\n            .svg(svgData.contents);\n          const fgheight: number = fggroup.bbox().height;\n          const fgwidth: number = fggroup.bbox().width;\n          const scale = (brandingSquareEdgeLengthInPixels * 0.5) / Math.max(fgheight, fgwidth);\n\n          this.log.info(`SVG - height: ${fgheight} width: ${fgwidth} scale: ${scale}`);\n          fggroup.transform({\n            scale,\n            translateX: (brandingSquareEdgeLengthInPixels - fgwidth * scale) / 2,\n            translateY: (brandingSquareEdgeLengthInPixels - fgheight * scale) / 2,\n          });\n\n          const svgOut = [\n            '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>',\n            this.canvas.svg(),\n            '\\n',\n          ].join('\\n');\n          this.log.debug(`SVG data to write: ${svgOut}`);\n          fs.mkdirSync(path.dirname(svgPath), { recursive: true });\n          fs.writeFileSync(svgPath, svgOut, { encoding: 'utf8' });\n          this.log.debug(`SVG image generated: ${svgPath}`);\n          return;\n        }\n\n        throw new Error('Canvas not initialized');\n      })\n      .catch((error) => {\n        this.log.fail(`Error generating svg image: ${svgPath}. Error: ${error}`);\n      });\n  }\n}\n"]}