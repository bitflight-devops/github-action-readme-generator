{"version":3,"file":"svg-editor.mjs","sourceRoot":"","sources":["../../src/svg-editor.mts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport * as fs from 'node:fs';\nimport * as path from 'node:path';\n\nimport type { Container } from '@svgdotjs/svg.js';\nimport { registerWindow, SVG } from '@svgdotjs/svg.js';\nimport * as feather from 'feather-icons';\nimport { createSVGDocument, createSVGWindow, SVGDocument, SVGWindow } from 'svgdom'; /// main-module.js';\n\nimport LogTask from './logtask/index.js';\n\ntype conforms<T, V> = T extends V ? T : V;\ntype FeatherIconKeysArray = keyof typeof feather.icons;\ntype FeatherIconKeys<T extends string, R = FeatherIconKeysArray> = conforms<T, R>;\n// function featherType<T extends FeatherIconKeysArray | string>(iconName: T): FeatherIconKeys<T> {\n//   return iconName as FeatherIconKeys<T>;\n// }\nconst brandingSquareEdgeLengthInPixels = 50;\n\n// https://help.github.com/en/articles/metadata-syntax-for-github-actions#branding\nconst GITHUB_ACTIONS_OMITTED_ICONS = new Set([\n  'coffee',\n  'columns',\n  'divide-circle',\n  'divide-square',\n  'divide',\n  'frown',\n  'hexagon',\n  'key',\n  'meh',\n  'mouse-pointer',\n  'smile',\n  'tool',\n  'x-octagon',\n]);\nexport const GITHUB_ACTIONS_BRANDING_ICONS = new Set(\n  Object.keys(feather.icons).filter((item) => !GITHUB_ACTIONS_OMITTED_ICONS.has(item))\n);\nexport const GITHUB_ACTIONS_BRANDING_COLORS = [\n  'white',\n  'yellow',\n  'blue',\n  'green',\n  'orange',\n  'red',\n  'purple',\n  'gray-dark',\n];\n\nexport default class SVGEditor {\n  log: LogTask;\n\n  window?: SVGWindow;\n\n  canvas?: Container;\n\n  document?: SVGDocument;\n\n  constructor() {\n    this.log = new LogTask('SVGEditor');\n  }\n\n  async init(): Promise<void> {\n    if (!this.window) {\n      // returns a window with a document and an svg root node\n      this.window = createSVGWindow();\n\n      const { document } = this.window;\n      // instanceof<typeof createSVGWindow>\n      // register window and document\n      registerWindow(this.window, document);\n      if (!this.canvas) {\n        // create canvas\n        this.canvas = SVG(document.documentElement) as Container;\n      }\n    }\n\n    if (!this.document) {\n      this.document = createSVGDocument();\n    }\n\n    if (!this.canvas) {\n      // create canvas\n      this.canvas = SVG(this.document.documentElement) as Container;\n    }\n  }\n\n  /**\n   * Generates a svg branding image.\n   */\n  generateSvgImage(\n    svgPath: string | undefined,\n    icon: FeatherIconKeys<keyof typeof feather.icons> = 'book-open',\n    bgcolor = 'blue'\n  ): void {\n    const { log } = this;\n    if (svgPath && svgPath.length > 0) {\n      fs.mkdirSync(path.dirname(svgPath), { recursive: true });\n      this.init()\n        .then(() => {\n          const { canvas } = this;\n          if (!GITHUB_ACTIONS_BRANDING_ICONS.has(icon)) {\n            log.fail(`Invalid icon specified for branding: ${icon}`);\n            return;\n          }\n          const color = GITHUB_ACTIONS_BRANDING_COLORS.includes(bgcolor.toLowerCase())\n            ? bgcolor.toLowerCase()\n            : 'blue';\n\n          const svgData = feather.icons[icon];\n          log.info(`SVG data generated for ${icon} at ${svgPath} with color ${color}.`);\n          log.debug(`SVG data to ingest: ${svgData.toSvg()}`);\n          if (canvas) {\n            canvas.clear();\n            const outerViewBox = 100;\n            canvas\n              .size(brandingSquareEdgeLengthInPixels, brandingSquareEdgeLengthInPixels)\n              .viewbox(`0 0 ${outerViewBox} ${outerViewBox}`)\n              .stroke(color.startsWith('white') ? 'white' : 'black')\n              .fill('none');\n            const circleSize = outerViewBox / 2;\n            canvas\n              .circle('50%')\n              .fill(color)\n              .radius(circleSize)\n              .cx(circleSize)\n              .cy(circleSize)\n              .stroke({ width: 0 });\n\n            const iconsvgOuter = canvas.nested();\n            iconsvgOuter.attr('overflow', 'visible').height('50%').width('50%').x('25%').y('25%');\n            const iconsvg = iconsvgOuter.nested();\n\n            iconsvg.id('icon').svg(svgData.contents);\n            for (const attr of Object.keys(svgData.attrs)) {\n              iconsvg.attr(attr, svgData.attrs[attr]);\n            }\n            iconsvg.attr('overflow', 'visible');\n            log.info(`SVG icon: rbox: ${iconsvg.rbox()}`);\n            log.info(`SVG icon: bbox: ${iconsvg.bbox()}`);\n            iconsvg.viewbox(iconsvg.bbox());\n            iconsvg.height('auto').width('auto');\n\n            const svgOut = [\n              '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>',\n              canvas.svg(),\n              '\\n',\n            ].join('\\n');\n            log.debug(`SVG data to write: ${svgOut}`);\n            fs.mkdirSync(path.dirname(svgPath), { recursive: true });\n            fs.writeFileSync(svgPath, svgOut, { encoding: 'utf8' });\n            log.debug(`SVG image generated: ${svgPath}`);\n            return;\n          }\n\n          throw new Error('Canvas not initialized');\n        })\n        .catch((error) => {\n          log.fail(`Error generating svg image: ${svgPath}. Error: ${error}`);\n        });\n    } else {\n      log.debug('svgPath is not provided');\n    }\n  }\n}\n"]}