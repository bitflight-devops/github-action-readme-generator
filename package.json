{
  "name": "github-action-readme-generator",
  "version": "0.0.0-development",
  "description": "This is a CLI tool and GitHub Action that reads in the details from a \nGitHub Action's `action.yml` file and updates the `README.md` file\nwith the `name`, `description`, `usage`, `inputs`, `outputs`, and\nexamples of the action.\nConfiguration can be provided via a `.ghadocs.json` file stored in the\nroot directory of the Action's repository, via the command line when\nusing the cli, or via the `with:` section of this Action.\n\n\nThis tool uses markdown comments as delimiting tokens within the `README.md`\nfile to determine where to place the generated content.\n\n[`README.example.md`](README.example.md) example with all fields filled in, and no other free-form content.",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "bin": "dist/index.js",
  "displayName": "bitflight-devops/github-action-readme-generator",
  "publishConfig": {
    "access": "public",
    "registry": "https://registry.npmjs.org/"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bitflight-devops/github-action-readme-generator"
  },
  "bugs": {
    "url": "https://github.com/bitflight-devops/github-action-readme-generator/issues"
  },
  "keywords": [
    "actions",
    "github",
    "node16",
    "node20",
    "documentation",
    "github-actions",
    "generator",
    "readme-generator"
  ],
  "author": "Jamie Nelson <jamie@bitflight.io>",
  "license": "APACHE",
  "scripts": {
    "all": "npm run build && npm run format && npm run lint && npm run test",
    "auto": "auto",
    "auto:canary": "[ -d dist ] && git add -f dist",
    "auto:next": "[ -d dist ] && git add -f dist",
    "auto:publish": "[ -d dist ] && git add -f dist",
    "auto:version": "npm run generate-docs",
    "build": "rimraf dist out;node ./scripts/esbuild.mjs && chmod +x dist/index.js && npm run postbuild",
    "build:docker": "run-script-os",
    "build:docker:default": "docker run --rm -t -v $(pwd):/work -w /work node:20-alpine sh -c 'npm run build'",
    "build:docker:win32": "docker run --rm -t -v \"%cd%\":/work -w /work node:20-alpine sh -c \"npm run build\"",
    "build:inputs": "esbuild --bundle src/testInputs.ts  --out-extension:.js=.cjs --color=true --sourcemap=inline --platform=node --outdir=dist --target=node20 && chmod -R +x dist/ && node ./dist/testInputs.cjs",
    "bump": "npm version -i patch && npm run release",
    "bump:minor": "version -i minor && npm run release",
    "clean": "rimraf dist",
    "commit": "git-cz",
    "corepack": "corepack enable",
    "current-version": "jq -r '.version' package.json",
    "generate-docs": "echo 'Generating docs';node dist/index.js && git add README.md",
    "format": "prettier --write . --config .prettierrc.cjs --ignore-unknown",
    "lint": "eslint -c .eslintrc.cjs --color ./src/ ./__tests__/",
    "prelint": "npm run format && tsc --project tsconfig.json --noemit",
    "lint:fix": "npm run lint --fix",
    "lint:markdown": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
    "lint:markdown:fix": "npm run lint:markdown --fix",
    "postbuild": "echo postbuild;tsc --project tsconfig.json --emitDeclarationOnly --declaration --outFile dist/index.d.ts",
    "postinstall": "echo 'âœ¨ Successfully Installed'",
    "postpublish:manual": "git push --follow-tags --set-upstream origin $branch && auto release",
    "postversion:manual": "git push --tags origin && git push origin",
    "pre-commit": "npm run build && git add dist && npm run generate-docs && lint-staged",
    "prepare": "[ -n ${GITHUB_ACTIONS:-} ] || husky install",
    "release:post": "npm publish --access public --tag v${npm_package_version} --tag latest",
    "test": "NODE_ENV=testing jest --runInBand",
    "test-ci": "NODE_ENV=testing jest --ci --reporters=default --reporters=jest-junit",
    "version:manual": "echo 'Run versioning commands';echo \"::set-output name=tag::v${npm_package_version}\"",
    "semantic-release": "semantic-release"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    },
    "ghadocs": {
      "outpath": ".github/tools/generate-docs"
    }
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ],
    "rules": {
      "body-max-length": [
        0
      ],
      "body-max-line-length": [
        0
      ],
      "footer-max-length": [
        0
      ],
      "footer-max-line-length": [
        0
      ],
      "header-max-length": [
        0
      ]
    }
  },
  "engines": {
    "node": ">=14.0.0"
  },
  "files": [
    "package.json",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
    "/dist"
  ],
  "os": [
    "!win32"
  ],
  "dependencies": {
    "@actions/core": "^1.10.1",
    "@actions/github": "^5.1.1",
    "async": "^3.2.4",
    "chalk": "^4",
    "js-yaml": "^4.1.0",
    "nconf": "github:indexzero/nconf",
    "node-emoji": "^2.1.0",
    "prettier": "^3.0.3",
    "tslib": "^2.6.2"
  },
  "devDependencies": {
    "@auto-it/all-contributors": "^11.0.4",
    "@auto-it/conventional-commits": "^11.0.4",
    "@auto-it/exec": "^11.0.4",
    "@auto-it/first-time-contributor": "^11.0.4",
    "@auto-it/git-tag": "^11.0.4",
    "@auto-it/npm": "^11.0.4",
    "@auto-it/omit-commits": "^11.0.4",
    "@auto-it/released": "^11.0.4",
    "@auto-it/upload-assets": "^11.0.4",
    "@babel/core": "^7.23.0",
    "@babel/eslint-parser": "^7.22.15",
    "@babel/plugin-proposal-decorators": "^7.23.0",
    "@babel/preset-env": "^7.22.20",
    "@commitlint/cli": "^17.7.2",
    "@commitlint/config-conventional": "^17.7.0",
    "@commitlint/prompt": "^17.7.2",
    "@jest/types": "^29.6.3",
    "@prettier/plugin-ruby": "^4.0.2",
    "@prettier/plugin-xml": "^3.2.1",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@trunkio/launcher": "^1.2.7",
    "@tsconfig/node20": "^20.1.2",
    "@types/babel__preset-env": "^7",
    "@types/esm": "^3",
    "@types/jest": "^29.5.5",
    "@types/js-yaml": "^4.0.6",
    "@types/nconf": "^0.10.4",
    "@types/node": "^20.8.3",
    "@types/node-emoji": "^1.8.2",
    "@typescript-eslint/eslint-plugin": "^6.7.4",
    "@typescript-eslint/parser": "^6.7.4",
    "@typescript-eslint/typescript-estree": "^6.7.5",
    "commitizen": "^4.3.0",
    "conventional-commits": "^1.6.0",
    "cz-conventional-changelog": "^3.3.0",
    "date-format": "^4.0.14",
    "dotenv": "^16.3.1",
    "esbuild": "^0.19.4",
    "esbuild-node-externals": "^1.9.0",
    "eslint": "^8.51.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-import-resolver-typescript": "^3.6.1",
    "eslint-plugin-actions": "^2.0.0",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-import": "^2.28.1",
    "eslint-plugin-jest": "^27.4.2",
    "eslint-plugin-jest-async": "^1.0.3",
    "eslint-plugin-lodash": "^7.4.0",
    "eslint-plugin-lodash-fp": "^2.2.0-a1",
    "eslint-plugin-no-use-extend-native": "^0.5.0",
    "eslint-plugin-optimize-regex": "^1.2.1",
    "eslint-plugin-prettier": "^5.0.0",
    "eslint-plugin-promise": "^6.1.1",
    "eslint-plugin-simple-import-sort": "^10.0.0",
    "eslint-plugin-sonarjs": "^0.21.0",
    "eslint-plugin-sort-class-members": "^1.19.0",
    "eslint-plugin-unicorn": "^48.0.1",
    "husky": "^8.0.3",
    "is-ci": "^3.0.1",
    "jest": "^29.7.0",
    "jest-circus": "^29.7.0",
    "jest-junit": "^16.0.0",
    "lint-staged": "^14.0.1",
    "markdownlint-cli": "^0.37.0",
    "prettier-eslint": "^15.0.1",
    "prettier-plugin-properties": "^0.2.0",
    "rimraf": "^5.0.5",
    "run-script-os": "^1.1.6",
    "semantic-release": "^22.0.5",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "types-package-json": "^2.0.39",
    "typescript": "^5.2.2",
    "yaml": "^2.3.2"
  },
  "jest-junit": {
    "suiteNameTemplate": "{filepath}",
    "classNameTemplate": "{classname}",
    "titleTemplate": "{title}"
  },
  "lint-staged": {
    "*.{md,json,yaml,yml,sh}": "prettier --write",
    "{src,__tests__}/**/*.js": "eslint --cache --fix",
    "*.ts": [
      "eslint --cache --fix"
    ]
  },
  "release": {
    "preset": "angular",
    "branches": [
      "main",
      "next",
      {
        "name": "alpha",
        "prerelease": true
      }
    ],
    "plugins": [
      "@semantic-release/commit-analyzer",
      "@semantic-release/release-notes-generator",
      "@semantic-release/changelog",
      "@semantic-release/npm",
      [
        "@semantic-release/github",
        {
          "assets": [
            "dist/**",
            "action.yml",
            "package.json"
          ]
        }
      ],
      "@semantic-release/git"
    ]
  }
}
