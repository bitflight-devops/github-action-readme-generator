{
  "name": "@bitflight-devops/github-action-readme-generator",
  "version": "1.1.5",
  "description": "This is a CLI tool and GitHub Action that reads in the details from a \nGitHub Action's `action.yml` file and updates the `README.md` file\nwith the `name`, `description`, `usage`, `inputs`, `outputs`, and\nexamples of the action.\nConfiguration can be provided via a `.ghadocs.json` file stored in the\nroot directory of the Action's repository, via the command line when\nusing the cli, or via the `with:` section of this Action.\n\n\nThis tool uses markdown comments as delimiting tokens within the `README.md`\nfile to determine where to place the generated content.\n\n[`README.example.md`](README.example.md) example with all fields filled in, and no other free-form content.",
  "main": "dist/index.cjs",
  "bin": "dist/index.cjs",
  "displayName": "bitflight-devops/github-action-readme-generator",
  "publishConfig": {
    "access": "public",
    "registry": "https://npm.pkg.github.com"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bitflight-devops/github-action-readme-generator"
  },
  "bugs": {
    "url": "https://github.com/bitflight-devops/github-action-readme-generator/issues"
  },
  "keywords": ["actions", "github", "node16", "documentation", "github-actions", "generator"],
  "author": "Jamie Nelson <jamie@bitflight.io>",
  "license": "APACHE",
  "scripts": {
    "test": "NODE_ENV=testing jest",
    "test-ci": "NODE_ENV=testing jest --ci --reporters=default --reporters=jest-junit",
    "build": "rimraf dist;esbuild --bundle src/index.ts --sourcemap=inline --platform=node --outfile=dist/index.cjs --target=node16 && git add dist",
    "build:docker": "run-script-os",
    "build:docker:win32": "docker run --rm -t -v \"%cd%\":/work -w /work node:16-alpine sh -c \"yarn run build\"",
    "build:docker:default": "docker run --rm -t -v $(pwd):/work -w /work node:16-alpine sh -c 'yarn run build'",
    "format": "yarn exec prettier --write . --config .prettierrc.js --ignore-unknown",
    "format:fix": "yarn run format",
    "bump": "yarn version -i patch && yarn run release",
    "bump:minor": "yarn version -i minor && yarn run release",
    "release": "git add .yarn package.json && git commit -m 'chore(release): bump version to ${npm_package_version}' && git tag -a v${npm_package_version} -m 'v${npm_package_version}' && yarn run postversion && yarn run publish",
    "publish": "yarn npm publish --access public --tag v${npm_package_version}",
    "postversion": "git push origin --follow-tags && git push --tags",
    "precommit": "yarn exec pretty-quick --staged",
    "prepare": "yarn exec is-ci || yarn exec husky install; yarn run build",
    "corepack": "corepack enable",
    "cachefolder": "corepack yarn config get cacheFolder",
    "clean": "rimraf dist",
    "lint": "eslint .",
    "lint:fix": "yarn run format && yarn exec eslint . --fix",
    "lint:markdown": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
    "lint:markdown:fix": "yarn run lint:markdown --fix",
    "all": "yon run build && yon run format && yon run lint && yon test",
    "postinstall": "echo 'âœ¨ Successfully Installed'",
    "commit": "git-cz",
    "pre-commit": "lint-staged && yon run build && git add dist && yon run generate-docs",
    "preversion": "echo 'Running test';yon run test",
    "version": "echo 'Run versioning commands';echo \"::set-output name=tag::v${npm_package_version}\"",
    "generate-docs": "echo 'Generating docs';node dist/index.cjs && git add README.md dist"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    },
    "ghadocs": {
      "outpath": ".github/tools/generate-docs"
    }
  },
  "commitlint": {
    "extends": ["@commitlint/config-conventional"],
    "rules": {
      "body-max-length": [0],
      "body-max-line-length": [0],
      "footer-max-length": [0],
      "footer-max-line-length": [0],
      "header-max-length": [0]
    }
  },
  "engines": {
    "node": ">=14.0.0"
  },
  "exports": {
    ".": {
      "import": "./src/index.ts",
      "require": "./dist/index.cjs"
    },
    "./package.json": "./package.json"
  },
  "files": ["src", "dist"],
  "os": ["!win32"],
  "dependencies": {
    "@actions/core": "^1.8.2",
    "@actions/github": "^5.0.3",
    "chalk": "^5.0.1",
    "date-format": "^4.0.10",
    "js-yaml": "^4.1.0",
    "markdown-table": "^3.0.2",
    "nconf": "github:indexzero/nconf",
    "node-emoji": "^1.11.0",
    "prettier": "^2.6.2",
    "reflect-metadata": "^0.1.13"
  },
  "devDependencies": {
    "@Broadshield/prettier-config": "github:Broadshield/prettier-config",
    "@babel/eslint-parser": "^7.18.2",
    "@commitlint/cli": "^17.0.2",
    "@commitlint/config-conventional": "^17.0.2",
    "@commitlint/prompt": "^17.0.0",
    "@jest/types": "^28.1.0",
    "@prettier/plugin-xml": "^2.2.0",
    "@trunkio/launcher": "^1.1.1",
    "@tsconfig/node16-strictest-esm": "^1.0.1",
    "@types/esm": "^3",
    "@types/jest": "^27.5.1",
    "@types/js-yaml": "^4.0.5",
    "@types/nconf": "^0.10.2",
    "@types/node": "^17.0.38",
    "@types/node-emoji": "^1.8.1",
    "@types/prettier-package-json": "^2",
    "@types/rimraf": "^3",
    "@typescript-eslint/eslint-plugin": "^5.27.0",
    "@typescript-eslint/parser": "^5.27.0",
    "@typescript-eslint/typescript-estree": "^5.27.0",
    "async": "^3.2.3",
    "commitizen": "^4.2.4",
    "cz-conventional-changelog": "^3.3.0",
    "dotenv": "^16.0.1",
    "esbuild": "^0.14.42",
    "esbuild-plugin-eslint": "^0.0.1",
    "eslint": "^8.16.0",
    "eslint-config-adjunct": "^4.11.1",
    "eslint-config-airbnb-babel": "latest",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-airbnb-typescript": "^17.0.0",
    "eslint-config-auto": "latest",
    "eslint-config-google": "^0.14.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-formatter-codeframe": "^7.32.1",
    "eslint-import-resolver-typescript": "^2.7.1",
    "eslint-plugin-actions": "^2.0.0",
    "eslint-plugin-array-func": "^3.1.7",
    "eslint-plugin-babel": "latest",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-github": "^4.3.6",
    "eslint-plugin-html": "^6.2.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jest": "^26.4.6",
    "eslint-plugin-jest-async": "^1.0.3",
    "eslint-plugin-json": "^3.1.0",
    "eslint-plugin-lodash": "^7.4.0",
    "eslint-plugin-lodash-fp": "^2.2.0-a1",
    "eslint-plugin-markdown": "^2.2.1",
    "eslint-plugin-no-constructor-bind": "^2.0.4",
    "eslint-plugin-no-secrets": "^0.8.9",
    "eslint-plugin-no-unsanitized": "^4.0.1",
    "eslint-plugin-no-use-extend-native": "^0.5.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-optimize-regex": "^1.2.1",
    "eslint-plugin-prettier": "latest",
    "eslint-plugin-promise": "^6.0.0",
    "eslint-plugin-scanjs-rules": "^0.2.1",
    "eslint-plugin-security": "^1.5.0",
    "eslint-plugin-simple-import-sort": "^7.0.0",
    "eslint-plugin-sonarjs": "^0.13.0",
    "eslint-plugin-sort-class-members": "^1.14.1",
    "eslint-plugin-switch-case": "^1.1.2",
    "eslint-plugin-unicorn": "^42.0.0",
    "eslint-plugin-yml": "latest",
    "esm": "^3.2.25",
    "husky": "^8.0.1",
    "is-ci": "^3.0.1",
    "jest": "^28.1.0",
    "jest-circus": "^28.1.0",
    "jest-junit": "^13.2.0",
    "lint-staged": "^13.0.0",
    "markdownlint-cli": "^0.31.1",
    "minimal": "^0.2.1",
    "prettier-eslint": "^15.0.1",
    "prettier-plugin-properties": "^0.1.0",
    "rimraf": "^3.0.2",
    "run-script-os": "^1.1.6",
    "semantic-release": "^19.0.2",
    "ts-jest": "^28.0.3",
    "ts-node": "^10.8.0",
    "tslib": "^2.4.0",
    "typescript": "^4.7.3",
    "typescript-eslint-language-service": "^5.0.0",
    "yarn-or-npm": "^3.0.1"
  },
  "jest-junit": {
    "suiteNameTemplate": "{filepath}",
    "classNameTemplate": "{classname}",
    "titleTemplate": "{title}"
  },
  "lint-staged": {
    "*.{md,json,yaml,yml,sh}": "prettier --write",
    "{src,__tests__}/**/*.js": "eslint --cache --fix",
    "*.ts": ["eslint --cache --fix"]
  },
  "resolutions": {
    "typescript": "^4.7.2"
  },
  "packageManager": "yarn@3.2.1"
}
