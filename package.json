{
  "name": "github-action-readme-generator",
  "displayName": "bitflight-devops/github-action-readme-generator",
  "version": "1.7.2",
  "description": "This is a CLI tool and GitHub Action that reads in the details from a \nGitHub Action's `action.yml` file and updates the `README.md` file\nwith the `name`, `description`, `usage`, `inputs`, `outputs`, and\nexamples of the action.\nConfiguration can be provided via a `.ghadocs.json` file stored in the\nroot directory of the Action's repository, via the command line when\nusing the cli, or via the `with:` section of this Action.\n\n\nThis tool uses markdown comments as delimiting tokens within the `README.md`\nfile to determine where to place the generated content.\n\n[`README.example.md`](README.example.md) example with all fields filled in, and no other free-form content.",
  "keywords": [
    "actions",
    "github",
    "node16",
    "node20",
    "documentation",
    "github-actions",
    "generator",
    "readme-generator"
  ],
  "bugs": {
    "url": "https://github.com/bitflight-devops/github-action-readme-generator/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bitflight-devops/github-action-readme-generator"
  },
  "license": "APACHE",
  "author": "Jamie Nelson <jamie@bitflight.io>",
  "type": "module",
  "exports": {
    "import": "./dist/mjs/index.js",
    "require": "./dist/cjs/index.js"
  },
  "main": "dist/cjs/index.js",
  "module": "dist/mjs/index.js",
  "types": "dist/types/index.d.ts",
  "bin": "dist/bin/index.js",
  "files": [
    "package.json",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
    "/dist"
  ],
  "scripts": {
    "all": "npm run build && npm run format && npm run lint && npm run test",
    "prebuild": "tsc --project tsconfig.json --noemit",
    "build": "rimraf dist out;node ./scripts/esbuild.mjs && chmod +x dist/bin/index.js",
    "postbuild": "tsc --project tsconfig.json --emitDeclarationOnly --declaration --outFile dist/types/index.d.ts && tsc -p tsconfig-mjs.json && ./scripts/set_package_type.sh",
    "build:docker": "run-script-os",
    "build:docker:default": "docker run --rm -t -v $(pwd):/work -w /work node:20-alpine sh -c 'npm run build'",
    "build:docker:win32": "docker run --rm -t -v \"%cd%\":/work -w /work node:20-alpine sh -c \"npm run build\"",
    "clean": "rimraf dist",
    "commit": "git-cz",
    "corepack": "corepack enable",
    "current-version": "jq -r '.version' package.json",
    "format": "prettier --write . --config .prettierrc.cjs --ignore-unknown",
    "generate-docs": "echo 'Generating docs';node dist/bin/index.js && git add README.md ./.github/ghadocs .ghadocs.json || true",
    "postinstall": "echo 'âœ¨ Successfully Installed'",
    "prelint": "npm run format && tsc --project tsconfig.json --noemit",
    "lint": "npm run lint:eslint && npm run lint:markdown",
    "lint:fix": "npm run lint:eslint:fix && npm run lint:markdown:fix",
    "lint:eslint": "eslint -c .eslintrc.cjs --color ./src/ ./__tests__/",
    "lint:eslint:fix": "npm run eslint -- --fix",
    "markdownlint": "markdownlint",
    "lint:markdown": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
    "lint:markdown:fix": "npm run lint:markdown -- --fix",
    "pre-commit": "lint-staged && npm run build && npm run generate-docs",
    "prepare": "[ -n ${GITHUB_ACTIONS:-} ] || husky install",
    "semantic-release": "semantic-release",
    "test": "vitest",
    "coverage": "vitest run --coverage",
    "version:manual": "echo 'Run versioning commands';echo \"::set-output name=tag::v${npm_package_version}\"",
    "postversion:manual": "git push --tags origin && git push origin"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ],
    "rules": {
      "body-max-length": [
        0
      ],
      "body-max-line-length": [
        0
      ],
      "footer-max-length": [
        0
      ],
      "footer-max-line-length": [
        0
      ],
      "header-max-length": [
        0
      ]
    }
  },
  "lint-staged": {
    "*.{md,json,yaml,yml,sh}": "prettier --write",
    "{src,__tests__}/**/*.js": "eslint --cache --fix",
    "*.{ts,mts,yml}": [
      "eslint --cache --fix"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "release": {
    "branches": [
      "main",
      "next",
      {
        "name": "alpha",
        "prerelease": true
      }
    ],
    "plugins": [
      "@semantic-release/commit-analyzer",
      "@semantic-release/release-notes-generator",
      "@semantic-release/changelog",
      [
        "@semantic-release/exec",
        {
          "prepareCmd": "npm run generate-docs"
        }
      ],
      "@semantic-release/npm",
      [
        "@semantic-release/github",
        {
          "assets": [
            "dist/**",
            "action.yml",
            "package.json",
            "package-lock.json"
          ]
        }
      ],
      "@semantic-release/git"
    ],
    "preset": "angular"
  },
  "dependencies": {
    "@actions/core": "^1.10.1",
    "@actions/github": "^6.0.0",
    "@svgdotjs/svg.js": "^3.2.0",
    "@types/feather-icons": "^4.29.3",
    "@types/svgdom": "^0.1.1",
    "chalk": "^5",
    "feather-icons": "^4.29.1",
    "nconf": "^0.12.1",
    "prettier": "^3.0.3",
    "svgdom": "^0.1.19",
    "yaml": "^2.3.3"
  },
  "devDependencies": {
    "@babel/core": "^7.23.2",
    "@babel/eslint-parser": "^7.22.15",
    "@babel/plugin-proposal-decorators": "^7.23.2",
    "@babel/preset-env": "^7.23.2",
    "@commitlint/cli": "^18.2.0",
    "@commitlint/config-conventional": "^18.1.0",
    "@commitlint/prompt": "^18.2.0",
    "@eslint-community/eslint-plugin-eslint-comments": "^4.1.0",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/exec": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@tsconfig/node20": "^20.1.2",
    "@types/babel__preset-env": "^7",
    "@types/esm": "^3",
    "@types/nconf": "^0.10.5",
    "@types/node": "^20.8.10",
    "@types/node-emoji": "^2.1.0",
    "@typescript-eslint/eslint-plugin": "^6.9.1",
    "@typescript-eslint/parser": "^6.9.1",
    "@vitest/coverage-v8": "^0.34.6",
    "commitizen": "^4.3.0",
    "conventional-commits": "^1.6.0",
    "cz-conventional-changelog": "^3.3.0",
    "dotenv": "^16.3.1",
    "esbuild": "^0.19.5",
    "esbuild-node-externals": "^1.9.0",
    "eslint": "^8.52.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-import-resolver-typescript": "^3.6.1",
    "eslint-plugin-actions": "^2.0.0",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-lodash": "^7.4.0",
    "eslint-plugin-lodash-fp": "^2.2.0-a1",
    "eslint-plugin-n": "^16.2.0",
    "eslint-plugin-no-use-extend-native": "^0.5.0",
    "eslint-plugin-optimize-regex": "^1.2.1",
    "eslint-plugin-prettier": "^5.0.1",
    "eslint-plugin-promise": "^6.1.1",
    "eslint-plugin-simple-import-sort": "^10.0.0",
    "eslint-plugin-sonarjs": "^0.22.0",
    "eslint-plugin-sort-class-members": "^1.19.0",
    "eslint-plugin-unicorn": "^49.0.0",
    "eslint-plugin-vitest": "^0.3.8",
    "husky": "^8.0.3",
    "is-ci": "^3.0.1",
    "lint-staged": "^15.0.2",
    "markdownlint-cli": "^0.37.0",
    "rimraf": "^5.0.5",
    "run-script-os": "^1.1.6",
    "semantic-release": "^22.0.6",
    "ts-node": "^10.9.1",
    "types-package-json": "^2.0.39",
    "typescript": "^5.2.2",
    "vitest": "^0.34.6"
  },
  "engines": {
    "node": ">=20.0.0 <21.0.0",
    "npm": ">=10.0.0"
  },
  "os": [
    "!win32"
  ],
  "publishConfig": {
    "access": "public",
    "registry": "https://registry.npmjs.org/"
  },
  "volta": {
    "node": "20.9.0"
  }
}
